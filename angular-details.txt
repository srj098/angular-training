Day-1
-------

npm install -g @angular/cli

create an angular app using angular cli
----------------------------------------

ng new application name


Run the application
-------------------
ng serve   you should launch manually in browser http://localhost:4200
ng serve --open it will directly open into browser




Day--2
----------

data binding
-------------
one way data binding 

Interpolation - component to view - {{}}
property binding - component to view - []
event binding -  view to component - ()

two way data binding
component to view and view to component

ngModel - it is useful for two way data binding to bind the data we useful
            [(ngModel)] = ""




Day-3
-------
Module- It having @NgModule decorator which provide the metadata for the Module

Declarations:[]- it contains components, pipes, directives
Imports:[]- it contains the other modules, feature modules
Providers:[]- it contains the services
bootstrap:[]- it having the information of the component which you want to bootstrap

Bootstrap process of the application
-------------------------------------
1. main.ts file bootstrap the app modules
2. module will bootstrap the app component
3. component having the selector and index.html will use the selector and load the component
4. finally component template will load and it will display on the browser





Day:4
-------
create a module
------------------

ng generate module module-name  or ng g m module-name  - it will create a module in a folder but if you dont want to create module 
in folder then use --flat flag
ex: ng g m module-name --flag

create a module with routing file(routing module)
--------------------------------------------------

ng g m module-name --routing --flat 

create a component
-------------------
ng g c component-name - it will create 4 files and update the module as well

1. code file (.ts)
2. html file
3. CSS file
4. Unit testing file (.spec.ts)

if you dont want to create spec or test file then use --skipTests flag

create a service
-----------------
ng g s service-name --flat --skipTests

craete a directives
---------------------
ng g d directive-name

carete a pipe
--------------
ng g p pipe-name







Day:5
------
directives
------------
All the directive will useful for the template 

we have 3 types of directive in angular

1. component - component is a class having component decorator (@Component)
               you can use the component in any template using the component selector
               compoennt is a directive which having template also, you can apply this directive in the template using the 
               selector 
               ex: if the selector is app-root then in template it will be <app-root></app-root>

2. Structural
3. Attribute


Day: 6
------
component - component is a class whcih is decorated with the @Component() decorator whcih provide the metadata of the component.

@Component({
    selector
})

Day: 7

how to create compoennt and module from scratch ?

Component interaction - pass the data from one component to another component
1. using @Input() decorator - pass the data from parent component to child component , we are binding the data which is coming
   from parent component to the property of the child component
   
2. using @Output() decorator
3. using @ViewChild()
4. using services

Day:8

@Output - this decorator is useful to emit the data from child compoenent to parent

child component will fire one event with the data , for firing the event it will use EventEmmiter

Child compoennt will craete the instance of EventEmmiter using new Operator

        @Output() content = new EventEmitter<string>();
 
After careting the instance and event then it will fire the data using emit method

         this.content.emit(this.contentData);

To accept the data from child component parent componnt will bind the event of the child component and get the data using 
$event

Day:9
------

Template Reference variable - using # 
if you are using this variable in any html element or compoennt ,then using this variable you can access all the properties
and methods of that element.

The scope of this variable in only that template.

component interaction using service
------------------------------------



















